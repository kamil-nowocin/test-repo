name: TEST | PR Validation

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

run-name: "üë∑üöß[#${{ github.run_number }}][VALIDATION] Validating PR \"${{ github.event.pull_request.title }}\""

on:
  pull_request:
    types: [ opened, ready_for_review, reopened, edited, synchronize ]

jobs:
  assign-pr:
    if: (github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'ready_for_review') && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    name: "Assign PR üîñ"
    steps:
      - name: "Auto Assign PR"
        uses: kentaro-m/auto-assign-action@v2.0.0

  validate-pr:
    if: (github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'ready_for_review') && github.event.pull_request.draft == false && github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    name: "Validate PR üõ†Ô∏è"
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4

      - name: "Grant execute permission for all scripts in .github/scripts"
        run: chmod +x ${{ github.workspace }}/.github/scripts/*

      - name: "Validate PR title"
        uses: actions/github-script@v7
        with:
          script: |
            const postComment = require('./.github/scripts/postComment.js');
            
            const task = process.env.TASK;
            const regexPattern = process.env.REGEX_PATTERN;
            const passMessage = process.env.PASS_MESSAGE;
            const failMessage = process.env.FAIL_MESSAGE;
            
            await postComment(github, context, core, {
              task,
              regexPattern,
              passMessage,
              failMessage
            });
        env:
          TASK: 'validate-pr-title'
          REGEX_PATTERN: '^\[TEST-\d{4,6}\]: .+'
          PASS_MESSAGE: |
            ### PR Title Validation succeeded! ‚úÖ
            
            Your PR title matches the required format.
          FAIL_MESSAGE: |
            ### Gradle Build Failed! ‚ùå
            
            Your PR title doesn't match the required format.
            Please ensure the PR title follows the required format:  `[TEST-XXXXX]: Your description`
            You can check the [TEST | Project Compilation #{run_number}]({run_url}) logs for more information.
